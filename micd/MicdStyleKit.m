//
//  MicdStyleKit.m
//  ProjectName
//
//  Created by AuthorName on 3/28/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "MicdStyleKit.h"


@implementation MicdStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawProgressBarWithFrame: (CGRect)frame progressWidth: (CGFloat)progressWidth
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.161 green: 0.745 blue: 0.867 alpha: 1];

    //// progress Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, CGRectGetMinX(frame) + 13, CGRectGetMinY(frame));

    UIBezierPath* progressPath = [UIBezierPath bezierPathWithRect: CGRectMake(-13, 0, progressWidth, 30)];
    [color setFill];
    [progressPath fill];

    CGContextRestoreGState(context);


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 30) controlPoint1: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) - 0) controlPoint2: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 30)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 30)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 28.86) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 30) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 29.59)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 15) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 5.65, CGRectGetMinY(frame) + 27.89) controlPoint2: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 22.05)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 1.14) controlPoint1: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame) + 7.95) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 5.65, CGRectGetMinY(frame) + 2.11)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame)) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame) + 0.41) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 13, CGRectGetMinY(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame), CGRectGetMinY(frame))];
    [bezierPath closePath];
    [UIColor.blackColor setFill];
    [bezierPath fill];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 0)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 1.14) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 0.41)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 15) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 5.22, CGRectGetMinY(frame) + 2.11) controlPoint2: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 7.95)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 28.86) controlPoint1: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 22.05) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 5.22, CGRectGetMinY(frame) + 27.89)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 30) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 29.59) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 30)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame) + 30)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame), CGRectGetMinY(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 0)];
    [bezier2Path closePath];
    [UIColor.blackColor setFill];
    [bezier2Path fill];


    //// progressOutline Drawing
    UIBezierPath* progressOutlinePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + 1, CGRectGetMinY(frame) + 1, floor((CGRectGetWidth(frame) - 1) * 0.99733 + 0.5), 28) cornerRadius: 14];
    [color setStroke];
    progressOutlinePath.lineWidth = 2;
    [progressOutlinePath stroke];
}

#pragma mark Generated Images

+ (UIImage*)imageOfProgressBarWithFrame: (CGRect)frame progressWidth: (CGFloat)progressWidth
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [MicdStyleKit drawProgressBarWithFrame: frame progressWidth: progressWidth];

    UIImage* imageOfProgressBar = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfProgressBar;
}

@end
